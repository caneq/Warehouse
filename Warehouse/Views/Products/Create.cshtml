@using Warehouse.ViewModels
@model ProductViewModel
@{
    ViewData["Title"] = "Оформить новый товар";
    Layout = "_Layout";
}

<script src="~/lib/dropzone/dropzone.js"></script>
<link href="~/lib/dropzone/dropzone.css" rel="stylesheet" />

<section class="order-form my-4 mx-4 col-lg-9">
    <form method="post" enctype="multipart/form-data" id="form">
        <div class="container pt-4">

            <div class="row">
                <div class="col-12">
                    <h3>Новый товар</h3>
                    <hr class="mt-1">
                </div>
                <div class="col-12">

                    <div class="row mt-7 mx-4">
                        <div class="col-12 col-sm-11">
                            <label class="order-form-label">Название</label>
                            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "order-form-input" } })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="row mt-3 mx-4">
                        <div class="col-3">
                            <label class="order-form-label">Количество</label>
                            @Html.EditorFor(m => m.CountInStock, new { htmlAttributes = new { @class = "order-form-input" } })
                            @Html.ValidationMessageFor(m => m.CountInStock)
                        </div>

                        <div class="col-3">
                            <label class="order-form-label">Единица измерения</label>
                            @Html.DropDownListFor(m => m.UnitId, ViewBag.Units as IEnumerable<SelectListItem>, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UnitId)
                        </div>

                        <div class="col-3">
                            <label class="order-form-label">Срок хранения (дни)</label>
                            @Html.EditorFor(m => m.ShelfLife, new { htmlAttributes = new { @class = "order-form-input" } })
                            @Html.ValidationMessageFor(m => m.ShelfLife)
                        </div>
                        <div class="col-3">
                            <label class="order-form-label">Вес (кг)</label>
                            @Html.EditorFor(m => m.Weight, new { htmlAttributes = new { @class = "order-form-input" } })
                            @Html.ValidationMessageFor(m => m.Weight)
                        </div>
                        <div class="col-3">
                            <label class="order-form-label">Цена (руб)</label>
                            @Html.EditorFor(m => m.PriceString, new { htmlAttributes = new { @class = "order-form-input" } })
                            @Html.ValidationMessageFor(m => m.PriceString)
                        </div>

                        <div class="col-3">
                            <label class="order-form-label">Страна происхождения</label>
                            @Html.DropDownListFor(m => m.ManufactureCountryId, ViewBag.Countries as IEnumerable<SelectListItem>, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ManufactureCountryId)
                        </div>
                    </div>
                    <div class="row mt-3 mx-4 mb-4">
                        <label class="order-form-label">Описание</label>
                        @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "order-form-input" } })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>

                    <div class="dropzone" id="mydropzone"></div>

                    <div class="row mt-3 justify-content-center">
                        <div class="col-auto">
                            <button type="submit" id="btnSubmit" class="btn btn-primary d-block mx-auto btn-submit">Оформить</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </form>
</section>

<script>
    function addLinkToForm(link) {
        var inp = document.createElement("input");
        inp.value = link;
        inp.hidden = true;
        inp.name = "Pictures";
        document.getElementById('form').appendChild(inp);
    }

    Dropzone.options.mydropzone = {
        url: "https://api.imgur.com/3/image",
        timeout: 120000,
        paramName: "image",
        dictDefaultMessage: "Нажмите или перетащите сюда фотографии",
        acceptedFiles: ".jpg, .jpeg, .png, .gif",
        success: function (file, responce) {
            console.log(responce.data.link);
            addLinkToForm(responce.data.link);
        },
        headers: {
            'Authorization': 'Client-ID bb79ca08c6611e1',
            'Cache-Control': null,
            'X-Requested-With': null,
        }
    };
</script>